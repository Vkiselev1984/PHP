<p>Список пользователей в хранилище</p>

<div class="table-responsive small">
    <table class="table table-striped table-sm">
        <thead>
            <tr>
                <th scope="col">ID</th>
                <th scope="col">Имя</th>
                <th scope="col">Фамилия</th>
                <th scope="col">День рождения</th>
                <th scope="col">Действия</th> <!-- Новый столбец для действий -->
            </tr>
        </thead>
        <tbody>
            {% for user in users %}
            <tr>       
                <td>{{ user.getUserId() }}</td>   
                <td>{{ user.getUserName() }}</td>
                <td>{{ user.getUserLastName() }}</td>
                <td>{% if user.getUserBirthday() is not empty %}
                        {{ user.getUserBirthday() | date('d.m.Y') }}
                    {% else %}
                        <b>Не задан</b>
                    {% endif %}
                </td>
                <td>
            {% if isAdmin %}
                <a href="/user/edit/{{ user.id_user }}">Edit</a>
                <button class="delete-user" data-user-id="{{ user.id_user }}">Delete</button>
            {% endif %}
        </td>
            </tr>
            {% endfor %}
        </tbody>
    </table>
</div>

<script>
    let maxId = $('.table-responsive tbody tr:last-child td:first-child').html();
  
    setInterval(function () {
        $.ajax({
            method: 'POST',
            url: "/user/indexRefresh/",
            data: { maxId: maxId }
        }).done(function (response) {
            let users = $.parseJSON(response);
            
            if(users.length != 0){
                for(var k in users){
                    let row = "<tr>";
                    row += "<td>" + users[k].id + "</td>";
                    maxId = users[k].id;
                    row += "<td>" + users[k].username + "</td>";
                    row += "<td>" + users[k].userlastname + "</td>";
                    row += "<td>" + users[k].userbirthday + "</td>";
                    row += "<td><a href="/user/edit/{{ user.getUserId() }}" class="btn btn-warning btn-sm">Редактировать</a></td>"; // Кнопка редактирования для новых пользователей
                    row += "</tr>";
                    $('.content-template tbody').append(row);
                }
            }
        });
    }, 10000);

    document.addEventListener('DOMContentLoaded', function() {
    const deleteButtons = document.querySelectorAll('.delete-user');

    deleteButtons.forEach(button => {
        button.addEventListener('click', function() {
            const userId = this.getAttribute('data-user-id');

            if (confirm('Are you sure you want to delete this user?')) {
                fetch(`/user/delete/${userId}`, {
                    method: 'DELETE'
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        // Удалить строку из таблицы
                        this.closest('tr').remove();
                    } else {
                        alert(data.message);
                    }
                })
                .catch(error => console.error('Error:', error));
            }
        });
    });
});
</script>